---
- name: Get the list of docker images on host
  shell: docker images | awk '//{printf "%s\n",$1}' | awk 'NR>1' | uniq > /tmp/repository_result.txt

- name: Adjust repository name to fit into URL
  replace:
    path: /tmp/repository_result.txt
    regexp: "{{ item }}"
    replace: "library/{{ item }}"
  with_lines: docker images | awk '//{printf "%s\n",$1}' | awk 'NR>1' | grep -v / | uniq

- name: Ensure directories exist
  file:
    dest: /tmp/{{ item }}
    state: directory
  with_items: "{{ repository_result }}"

- name: Download list of latest versions of our docker images
  shell: curl -L 'https://registry.hub.docker.com/v2/repositories/{{ item }}/tags'|jq '."results"[]["name"]' > /tmp/{{ item }}/today.txt
  with_items: "{{ repository_result }}"

- name: Ensure yesterday files exist / if not copy todays content to yesterday
  copy:
    src: /tmp/{{ item }}/today.txt
    dest: /tmp/{{ item }}/yesterday.txt
    force: no
  with_items: "{{ repository_result }}"

- name: Copy today's versions to yesterday's state
  template:
    src: /tmp/{{ item }}/today.txt
    dest: /tmp/{{ item }}/yesterday.txt
  register: diff_output
  with_items: "{{ repository_result }}"

- name: Send notification message via Slack or Email
  vars:
    slack_message: "New update for docker image {{ item.item }} is available!"
    slack_channel: "slacknotificationtesting"
    slack_username: "Docker Updates"
    # se_temp_type: "docker_update_available" #possible values are shown during execution'
    # se_to: "tadeas.resler@aura.cz"
    # se_subject: "New docker version for {{ item.item }} is available"
  include_role:
    - name: slack-notification
    # - name: send-email
  when: item.changed == 1
  loop: "{{ diff_output.results }}"
