---

- name: Get the list of docker images on host
  shell: docker images | awk '//{printf "%s\n",$1}' | awk 'NR>1' | uniq > /tmp/repository_result.txt

- name: Adjust repositories to fit into URL
  replace:
    path: /tmp/repository_result.txt
    regexp: "{{ item }}"
    replace: "library/{{ item }}"
  with_lines: docker images | awk '//{printf "%s\n",$1}' | awk 'NR>1' | grep -v / | uniq

- name: Ensure dictionary exist
  file:
    dest: /tmp/{{ item }}
    state: directory
  with_lines: cat /tmp/repository_result.txt

- name: Ensure today files exist
  copy:
    content: ""
    dest: /tmp/{{ item }}/today.txt
    force: no
  with_lines: cat /tmp/repository_result.txt

- name: Ensure yesterday files exist
  copy:
    content: ""
    dest: /tmp/{{ item }}/yesterday.txt
    force: no
  with_lines: cat /tmp/repository_result.txt

- name: Download list of latest versions of our docker images
  shell: curl -L 'https://registry.hub.docker.com/v2/repositories/{{ item }}/tags'|jq '."results"[]["name"]' > /tmp/{{ item }}/today.txt
  with_lines: cat /tmp/repository_result.txt

# - name: Compare files
#   shell: diff -q /tmp/{{ item }}/today.txt /tmp/{{ item }}/yesterday.txt > /tmp/{{ item }}/difference_result.txt
#   register: diff_output
#   failed_when: "diff_output.rc > 1"
#   with_lines: cat /tmp/repository_result.txt

- name: Copy today's versions to yesterday's state
  template:
    src: /tmp/{{ item }}/today.txt
    dest: /tmp/{{ item }}/yesterday.txt
    register: diff_output
  with_lines: cat /tmp/repository_result.txt

- name: Send notification message via Slack
  vars:
    dc_slack_message: "New update for docker image {{ item.item }} is available!"
    dc_slack_channel: "slacknotificationtesting"
    dc_slack_username: "Docker Updates"
    dc_slack_token: "T145LBQGJ/BMUK33E2C/h2cOENxbkbYlktlbSMNFNzad"
  slack:
    token: "{{ dc_slack_token }}"
    msg: "{{ dc_slack_message }}"
    channel: '#"{{ dc_slack_channel }}"'
    username: '"{{ dc_slack_username }}"'
    parse: 'none'
  delegate_to: localhost
  when: item.changed == 1
  loop: "{{ diff_output.results }}"









# - name: Search for difference in results files
#   lineinfile:
#     name: /tmp/{{ item }}/difference_result.txt
#     line: "differ"
#     state: present
#   check_mode: yes
#   register: results
#   with_items: "{{ docker_images }}"

# - name: Check difference_result file and notify
#   set_fact:
#    is_different: "1"

# # tasks file for package-security-check
#
# # - name: Creates a CRON for regular docker check everyday
# #   cron:
# #     name: Docker Update Check
# #     hour: 4
# #     minute: 15
# #     user: root
# #     job: ansible-playbook /etc/ansible/roles/docker-image-vulnerability-check/docker-image-vulnerability-check.yml -e "dc_image_name='library/httpd'" --vault-password-file /etc/ansible/vault_passwd
# #     cron_file: ansible_docker_update_check
# #
# # - name: More useful example of looping over a command result
# #   shell: "/usr/bin/frobnicate {{ item }}"
# #   with_lines:
# #     - "/usr/bin/frobnications_per_host --param {{ inventory_hostname }}"
#
# # - name: ansible create multiple directory example
# #   copy:
# #     src: templates/today.txt
# #     dest: /etc/ansible/roles/docker-image-vulnerability-check/templates/today/{{ item }}/
# #   with_items:
# #     - "library/httpd"
# #     - "sonatype/nexus3"
# #
# # - name: Download file and force basic auth
# #   uri:
# #     url: https://registry.hub.docker.com/v2/repositories/{{ item }}/tags/
# #     creates: today.txt
# #     dest: /etc/ansible/roles/docker-image-vulnerability-check/templates/today/{{ item }}/today.txt
# #   with_items:
# #    - "library/httpd"
# #    - "sonatype/nexus3"
#
#
# - name: Inspect multi images
#   uri:
#     url: https://registry.hub.docker.com/v2/repositories/{{ item }}/tags/
#     return_contents: yes
#   register: url_results
#   with_items:
#    - "library/httpd"
#    - "sonatype/nexus3"
#
# - name: debug
#   debug:
#     msg: "{{ url_results.content }}"
#

# with_items:
  #  - "library/httpd"
  #  - "sonatype/nexus3"

#
# - name: List of docker facts
#   debug:
#     msg: "{{ image_library/httpd_results.stdout_lines }}" #"| map(attribute='stdout_lines') | list }}"
#   with_items:
#    - "library/httpd"
#    - "sonatype/nexus3"
