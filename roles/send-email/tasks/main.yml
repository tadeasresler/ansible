---
#Import check.yml
- import_tasks: checks.yml

#In case you want to send 'New version of MCC installed' email set "temp_type" on 2 in extra vars
#Copying template for New version of MCC installed email to the main_template which is to be sent
- name: Create an email template "New version of MCC installed"
  template:
    src: templates/new_version_mcc.html
    dest: templates/main.html
  when: temp_type is defined and temp_type == "1"

#In case you want to send 'Docker update availability email' set "temp_type" on 2 in extra vars
#Copying template for docker update availability email to the main_template which is to be sent
- name: Create an email template "New Docker update available"
  template:
    src: templates/docker_update_available.html
    dest: templates/main.html
  when: temp_type is defined and temp_type == "2"

#In case no template choosen you have to specify at least message in extra vars
#Copying extra var 'message' to the main_template which is to be send
- name: Create an email without template
  copy:
    content: "{{ message }}"
    dest: templates/main.html
  when: temp_type is not defined or temp_type == ""

#Structure of the notifying emails
#Sending out the emails
- name: "Sending notifying e-mails"
  mail:
    subject: "{{ mail.subject }}"
    body: "{{ mail.body | default(omit) }}"
    host: "{{ mail.host | default(omit) }}"
    port: "{{ mail.port | default(omit) }}"
    username: "{{ mail.username | default(omit) }}"
    password: "{{ mail.password | default(omit) }}"
    to: "{{ mail.to | default(omit) }}"
    cc: "{{ mail.cc | default(omit) }}"
    bcc: "{{ mail.bcc | default(omit) }}"
    from: "{{ mail.from | default(omit)}}"
    headers: "{{ mail.headers | default(omit)}}"
    secure: "{{ mail.secure | default(omit) }}"
    subtype: "{{ mail.subtype | default(omit) }}"
